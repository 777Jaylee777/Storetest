import { Gulp } from 'gulp';
export interface IRedun {
    /**
     * Add recipes to be loaded when redun bootstraps
     * @param glob glob or array of globs matching recipe generating modules
     * matched by the given globs
     * @param overrideNames an object map of task names to override, e.g.
     * { webpack: bundle } will change the name of the 'webpack' task to 'bundle'
     * @param originQualifier qualify task names using {originQualifier}/, e.g.
     * task 'webpack' will _also_ be registered as 'myPrefix/webpack' (aliased) if
     * 'myPrefix' is set as the qualifier. Please note tasks that were given new
     * names retain their original names in their qualified version. i.e.
     * given 'myQualifier' as the qualifier, renaming 'webpack' to 'bundle' will
     * lead to registering 'myQualifier/webpack' as an alias of 'bundle'.
     */
    add(glob: string | string[], overrideNames?: {
        [key: string]: string;
    } | Function, originQualifier?: string): void;
    /**
     * bootstrap redun, loading all registered recipes and creating the Gulp tasks
     * @param gulp custom version of gulp to use (not tested with gulp 4)
     */
    bootstrap(gulp?: Gulp): void;
}
export declare let redun: IRedun;
export default redun;
