{"ast":null,"code":"let accessToken;\nlet userId;\nconst clientId = '9b98729b49374dfda220a7a453b7ae08';\nconst redirectUri = 'http://localhost:3000/';\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    // check for access token match\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`\n    };\n    let userId;\n    return fetch('https://api.spotify.com/v1/me', {\n      headers: headers\n    }).then(response => response.json()).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/ playlists`, {\n        hearders: headers,\n        method: 'POST',\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(response => response.json()).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com//v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["accessToken","userId","clientId","redirectUri","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackUris","length","hearders","method","body","JSON","stringify","playlistId","uris"],"sources":["C:/Users/Jayle/jamming/src/util/Spotify.js"],"sourcesContent":["let accessToken;\r\nlet userId;\r\nconst clientId = '9b98729b49374dfda220a7a453b7ae08';\r\nconst redirectUri = 'http://localhost:3000/'\r\n\r\nconst Spotify = {\r\n    getAccessToken(){\r\n      if(accessToken){\r\n        return accessToken;\r\n      }\r\n  \r\n      // check for access token match\r\n      const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n      const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n  \r\n      if (accessTokenMatch && expiresInMatch){\r\n        accessToken = accessTokenMatch[1];\r\n        const expiresIn = Number(expiresInMatch[1]);\r\n  \r\n        window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n        window.history.pushState('Access Token', null, '/');\r\n        return accessToken;\r\n      } else {\r\n        const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n        window.location = accessUrl;\r\n      }\r\n    },\r\n    search(term){\r\n      const accessToken = Spotify.getAccessToken();\r\n      return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, { headers: {\r\n        Authorization: `Bearer ${accessToken}`\r\n        }\r\n      }).then(response => {\r\n        return response.json();\r\n      }).then(jsonResponse => {\r\n        if (!jsonResponse.tracks) {\r\n          return [];\r\n        }\r\n        return jsonResponse.tracks.items.map(track => ({\r\n          id: track.id,\r\n          name: track.name,\r\n          artist: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri\r\n        }));\r\n      });\r\n    },\r\n  \r\n    savePlaylist(name, trackUris){\r\n      if(!name || !trackUris.length){\r\n        return;\r\n      }\r\n      const accessToken = Spotify.getAccessToken();\r\n      const headers = { Authorization: `Bearer ${accessToken}`};\r\n      let userId;\r\n  \r\n      return fetch('https://api.spotify.com/v1/me', {\r\n        headers: headers }\r\n      ).then(response => response.json()\r\n      ).then(jsonResponse => {\r\n      userId = jsonResponse.id;\r\n      return fetch(`https://api.spotify.com/v1/users/${userId}/ playlists`,\r\n      {\r\n        hearders: headers,\r\n        method: 'POST',\r\n        body: JSON.stringify({ name: name})\r\n      }).then(response => response.json()\r\n      ).then(jsonResponse => {\r\n        const playlistId = jsonResponse.id;\r\n  \r\n        return fetch(`https://api.spotify.com//v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n          headers: headers,\r\n          method: 'POST',\r\n          body: JSON.stringify({ uris: trackUris}),\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n  \r\n  export default Spotify;"],"mappings":"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"},"metadata":{},"sourceType":"module"}