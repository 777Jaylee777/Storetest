{"ast":null,"code":"let accessToken;\nlet userId;\nconst clientId = '9b98729b49374dfda220a7a453b7ae08';\nconst redirectUri = 'http://localhost:3000/';\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    // check for access token match\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      accessToken = accessToken.replace(\"=\", \"\"); // troubleshooting\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = \"\", expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n  getCurrentUserId() {\n    if (userId) {\n      return userId;\n    }\n    const accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return userId;\n    }).catch(function (err) {\n      console.log(\"Fetch problem line 47: \" + err.message);\n    });\n  },\n  getUserPlaylists() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n      contentType: application / json\n    };\n    return Promise.resolve(Spotify.getCurrentUserId()).then(response => {\n      userId = response;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: \"GET\"\n      }).then(response => response.json()).then(jsonResponse => {\n        if (!jsonResponse.items) {\n          return [];\n        }\n        return jsonResponse.items.map(playlist => ({\n          playlistName: playlist.name,\n          playlistId: playlist.id\n        }));\n      });\n    });\n  },\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        contentType: application / json\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n  // name = playlist name\n  savePlayList(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n      contentType: application / json\n    };\n    return Promise.resolve(Spotify.getCurrentUserId()).then(response => {\n      userId = response;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(response => response.json()).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      }).catch(function (err) {\n        console.log(\"Fetch problem: \", err.message);\n      });\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["accessToken","userId","clientId","redirectUri","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","replace","expiresIn","Number","setTimeout","history","pushState","accessUrl","getCurrentUserId","fetch","headers","Authorization","then","response","json","jsonResponse","id","catch","err","console","log","message","getUserPlaylists","contentType","application","Promise","resolve","method","items","map","playlist","playlistName","name","playlistId","search","term","tracks","track","artist","artists","album","uri","savePlayList","trackUris","length","body","JSON","stringify","uris"],"sources":["C:/Users/Jayle/jamming/src/util/Spotify.js"],"sourcesContent":["let accessToken;\r\nlet userId;\r\nconst clientId = '9b98729b49374dfda220a7a453b7ae08';\r\nconst redirectUri = 'http://localhost:3000/'\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n      if (accessToken) {\r\n        return accessToken;\r\n      }\r\n      // check for access token match\r\n      const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n      const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n  \r\n      if (accessTokenMatch && expiresInMatch) {\r\n        accessToken = accessTokenMatch[1];\r\n        accessToken = accessToken.replace(\"=\", \"\"); // troubleshooting\r\n        const expiresIn = Number(expiresInMatch[1]);\r\n        window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n        window.history.pushState(\"Access Token\", null, \"/\");\r\n        return accessToken;\r\n      } else {\r\n        const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n        window.location = accessUrl;\r\n      }\r\n    },\r\n  \r\n    getCurrentUserId() {\r\n      if (userId) {\r\n        return userId;\r\n      }\r\n  \r\n      const accessToken = Spotify.getAccessToken();\r\n  \r\n      return fetch(\"https://api.spotify.com/v1/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((jsonResponse) => {\r\n          userId = jsonResponse.id;\r\n          return userId;\r\n        })\r\n        .catch(function (err) {\r\n          console.log(\"Fetch problem line 47: \" + err.message);\r\n        });\r\n    },\r\n  \r\n    getUserPlaylists() {\r\n      const accessToken = Spotify.getAccessToken();\r\n      const headers = {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        contentType: application/json,\r\n      };\r\n  \r\n      return Promise.resolve(Spotify.getCurrentUserId()).then((response) => {\r\n        userId = response;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: \"GET\",\r\n        })\r\n          .then((response) => response.json())\r\n          .then((jsonResponse) => {\r\n            if (!jsonResponse.items) {\r\n              return [];\r\n            }\r\n            return jsonResponse.items.map((playlist) => ({\r\n              playlistName: playlist.name,\r\n              playlistId: playlist.id,\r\n            }));\r\n          });\r\n      });\r\n    },\r\n  \r\n    search(term) {\r\n      const accessToken = Spotify.getAccessToken();\r\n      return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          contentType: application/json,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((jsonResponse) => {\r\n          if (!jsonResponse.tracks) {\r\n            return [];\r\n          }\r\n          return jsonResponse.tracks.items.map((track) => ({\r\n            id: track.id,\r\n            name: track.name,\r\n            artist: track.artists[0].name,\r\n            album: track.album.name,\r\n            uri: track.uri,\r\n          }));\r\n        });\r\n    },\r\n    // name = playlist name\r\n    savePlayList(name, trackUris) {\r\n      if (!name || !trackUris.length) {\r\n        return;\r\n      }\r\n  \r\n      const accessToken = Spotify.getAccessToken();\r\n      const headers = {\r\n        Authorization: `Bearer ${accessToken}`,\r\n        contentType: application/json,\r\n      };\r\n      return Promise.resolve(Spotify.getCurrentUserId()).then((response) => {\r\n        userId = response;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: \"POST\",\r\n          body: JSON.stringify({ name: name }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((jsonResponse) => {\r\n            const playlistId = jsonResponse.id;\r\n            return fetch(\r\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n              {\r\n                headers: headers,\r\n                method: \"POST\",\r\n                body: JSON.stringify({ uris: trackUris }),\r\n              }\r\n            );\r\n          })\r\n          .catch(function (err) {\r\n            console.log(\"Fetch problem: \", err.message);\r\n          });\r\n      });\r\n    },\r\n  };\r\n  \r\n  export default Spotify;"],"mappings":"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"},"metadata":{},"sourceType":"module"}