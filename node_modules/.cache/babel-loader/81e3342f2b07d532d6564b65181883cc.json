{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jayle\\\\Store\\\\src\\\\features\\\\cart\\\\Cart.js\";\nimport React from 'react';\nimport { calculateTotal, getCurrencySymbol } from '../../utilities/utilities.js';\nimport { changeItemQuantity } from './cartSlice';\n\n// Import the changeItemQuantity() action creator.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cart = props => {\n  const {\n    cart,\n    currencyFilter,\n    dispatch\n  } = props;\n  const onInputChangeHandler = (name, input) => {\n    // If the user enters a bad value...\n    if (input === '') {\n      return;\n    }\n\n    // Otherwise, convert the input into a number and pass it along as the newQuantity.\n    const newQuantity = Number(input);\n\n    // Dispatch an action to change the quantity of the given name and quantity.\n    dispatch(changeItemQuantity(name, newQuantity));\n  };\n\n  // Use the cart and currencyFilter slices to render their data.\n  const cartElements = Object.keys(cart).map(createCartItem);\n  const total = calculateTotal(cart, currencyFilter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"cart-items\",\n      children: cartElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"total\",\n      children: [\"Total\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-value\",\n        children: [getCurrencySymbol(currencyFilter), total, \" \", currencyFilter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n  function createCartItem(name) {\n    const item = cart[name];\n    if (item.quantity === 0) {\n      return;\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"item-quantity\",\n        value: item.quantity,\n        onChange: e => {\n          onInputChangeHandler(name, e.target.value);\n        },\n        children: [...Array(100).keys()].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","calculateTotal","getCurrencySymbol","changeItemQuantity","Cart","props","cart","currencyFilter","dispatch","onInputChangeHandler","name","input","newQuantity","Number","cartElements","Object","keys","map","createCartItem","total","item","quantity","e","target","value","Array","_","index"],"sources":["C:/Users/Jayle/Store/src/features/cart/Cart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  calculateTotal,\r\n  getCurrencySymbol,\r\n} from '../../utilities/utilities.js';\r\nimport {changeItemQuantity} from './cartSlice';\r\n\r\n// Import the changeItemQuantity() action creator.\r\n\r\nexport const Cart = (props) => {\r\n  const { cart, currencyFilter, dispatch } = props;\r\n\r\n  const onInputChangeHandler = (name, input) => {\r\n    // If the user enters a bad value...\r\n    if (input === '') {\r\n      return;\r\n    }\r\n\r\n    // Otherwise, convert the input into a number and pass it along as the newQuantity.\r\n    const newQuantity = Number(input);\r\n\r\n    // Dispatch an action to change the quantity of the given name and quantity.\r\n    dispatch(changeItemQuantity(name, newQuantity));\r\n  };\r\n\r\n  // Use the cart and currencyFilter slices to render their data.\r\n  const cartElements = Object.keys(cart).map(createCartItem);\r\n  const total = calculateTotal(cart, currencyFilter);\r\n\r\n  return (\r\n    <div id=\"cart-container\">\r\n      <ul id=\"cart-items\">{cartElements}</ul>\r\n      <h3 className=\"total\">\r\n        Total{' '}\r\n        <span className=\"total-value\">\r\n          {getCurrencySymbol(currencyFilter)}{total} {currencyFilter}\r\n        </span>\r\n      </h3>\r\n    </div>\r\n  );\r\n\r\n  function createCartItem(name) {\r\n    const item = cart[name];\r\n\r\n    if (item.quantity === 0) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <li key={name}>\r\n        <p>{name}</p>\r\n        <select\r\n          className=\"item-quantity\"\r\n          value={item.quantity}\r\n          onChange={(e) => {\r\n            onInputChangeHandler(name, e.target.value);\r\n          }}\r\n        >\r\n          {[...Array(100).keys()].map((_, index) => (\r\n            <option key={index} value={index}>\r\n              {index}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </li>\r\n    );\r\n  }\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,iBAAiB,QACZ,8BAA8B;AACrC,SAAQC,kBAAkB,QAAO,aAAa;;AAE9C;AAAA;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAEhD,MAAMI,oBAAoB,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5C;IACA,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChB;IACF;;IAEA;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACF,KAAK,CAAC;;IAEjC;IACAH,QAAQ,CAACL,kBAAkB,CAACO,IAAI,EAAEE,WAAW,CAAC,CAAC;EACjD,CAAC;;EAED;EACA,MAAME,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACV,IAAI,CAAC,CAACW,GAAG,CAACC,cAAc,CAAC;EAC1D,MAAMC,KAAK,GAAGlB,cAAc,CAACK,IAAI,EAAEC,cAAc,CAAC;EAElD,oBACE;IAAK,EAAE,EAAC,gBAAgB;IAAA,wBACtB;MAAI,EAAE,EAAC,YAAY;MAAA,UAAEO;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,eACvC;MAAI,SAAS,EAAC,OAAO;MAAA,oBACb,GAAG,eACT;QAAM,SAAS,EAAC,aAAa;QAAA,WAC1BZ,iBAAiB,CAACK,cAAc,CAAC,EAAEY,KAAK,OAAGZ,cAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;EAGR,SAASW,cAAc,CAACR,IAAI,EAAE;IAC5B,MAAMU,IAAI,GAAGd,IAAI,CAACI,IAAI,CAAC;IAEvB,IAAIU,IAAI,CAACC,QAAQ,KAAK,CAAC,EAAE;MACvB;IACF;IAEA,oBACE;MAAA,wBACE;QAAA,UAAIX;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb;QACE,SAAS,EAAC,eAAe;QACzB,KAAK,EAAEU,IAAI,CAACC,QAAS;QACrB,QAAQ,EAAGC,CAAC,IAAK;UACfb,oBAAoB,CAACC,IAAI,EAAEY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QAC5C,CAAE;QAAA,UAED,CAAC,GAAGC,KAAK,CAAC,GAAG,CAAC,CAACT,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,CAACS,CAAC,EAAEC,KAAK,kBACnC;UAAoB,KAAK,EAAEA,KAAM;UAAA,UAC9BA;QAAK,GADKA,KAAK;UAAA;UAAA;UAAA;QAAA,QAGnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACK;IAAA,GAdFjB,IAAI;MAAA;MAAA;MAAA;IAAA,QAeR;EAET;AACF,CAAC;AAAC,KA1DWN,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}